

name: Docker CI/CD Pipeline

on:
  push:
    branches:
      - main
      - staging
      - dev
      - ft*
  pull_request:
    branches:
      - main
      - staging
      - dev
      - ft*
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build Gradle JAR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-

      - name: Grant Execute Permission for Gradle Wrapper
        run: chmod +x ./gradlew

      - name: Build Gradle Project (skip tests)
        run: ./gradlew build -x test --no-daemon

      - name: Upload Build Artifacts (JAR)
        uses: actions/upload-artifact@v4
        with:
          name: gradle-build
          path: build/libs/*.jar

  publish:
    name: Publish Docker Image
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'
      #    if: >
      #      github.event_name == 'push' && (
      #        github.ref == 'refs/heads/main' ||
      #        github.ref == 'refs/heads/staging'
      #      )

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Built JAR
        uses: actions/download-artifact@v4
        with:
          name: gradle-build
          path: build/libs/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: hlyamhtet/portfolio-backend:latest

      - name: Verify Docker Image
        run: docker pull hlyamhtet/portfolio-backend:latest

  deploy:
    name: Deploy to Z.com VPS
    runs-on: ubuntu-latest
    needs: publish
    if: github.event_name == 'push'
      #if: github.ref == 'refs/heads/main'

    steps:
      - name: Set up SSH for VPS
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/vpskey.pem
          chmod 600 ~/.ssh/vpskey.pem
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy and Run Container
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/vpskey.pem ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            set -e
            echo "Pulling latest Docker image..."
            docker pull hlyamhtet/portfolio-backend:latest

            echo "Stopping and removing existing container..."
            docker rm -f portfolio-backend || true

            echo "Starting new container..."
            docker run -d --name portfolio-backend -p 8081:8080 hlyamhtet/portfolio-backend:latest

            echo "Deployment complete! App available at http://18.140.211.96:8081"
          EOF
