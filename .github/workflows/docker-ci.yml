# - name: Checkout code
#   uses: actions/checkout@v4

# - name: Set up JDK 17
#   uses: actions/setup-java@v4
#   with:
#     distribution: temurin
#     java-version: 17

# - name: Build project with Maven
#   run: mvn clean install -DskipTests

# - name: Upload built JAR
#   uses: actions/upload-artifact@v4
#   with:
#     name: calculator-jar
#     path: target/*.jar

# deploy:
#   name: Deploy to Z.com VPS
#   runs-on: ubuntu-latest
#   needs: build

#   steps:
#     - name: Checkout repo (to get service files)
#       uses: actions/checkout@v4

#     - name: Download built JAR
#       uses: actions/download-artifact@v4
#       with:
#         name: calculator-jar
#         path: target/

#     - name: Set up SSH key for Z.com VPS
#       run: |
#         mkdir -p ~/.ssh
#         echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/pemkey.pem
#         chmod 600 ~/.ssh/pemkey.pem
#         ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

#     - name: Copy files to server and deploy
#       run: |
#         # copy jar and service unit files to /tmp on the server
#         scp -o StrictHostKeyChecking=no -i ~/.ssh/pemkey.pem ./target/*.jar ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/tmp/calculator-1.0.jar
#         scp -o StrictHostKeyChecking=no -i ~/.ssh/pemkey.pem ./deploy/javasimple.service ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/tmp/javasimple.service
#         scp -o StrictHostKeyChecking=no -i ~/.ssh/pemkey.pem ./deploy/javaforking.service ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/tmp/javaforking.service

#         # run remote commands to move files into place, set permissions, reload systemd and restart services
#         ssh -o StrictHostKeyChecking=no -i ~/.ssh/pemkey.pem ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
#           set -e
#           echo "Installing dependencies (if needed)..."
#           sudo apt update -y
#           sudo apt install -y openjdk-17-jdk

#           echo "Deploying app JAR..."
#           sudo mkdir -p /opt/myapp
#           sudo mv /tmp/calculator-1.0.jar /opt/myapp/myapp.jar
#           sudo chmod 644 /opt/myapp/myapp.jar

#           # ensure appuser exists
#           if ! id -u appuser >/dev/null 2>&1; then
#             sudo useradd -r -s /usr/sbin/nologin appuser
#           fi
#           sudo chown appuser:appuser /opt/myapp/myapp.jar

#           echo "Installing systemd unit files..."
#           sudo mv /tmp/javasimple.service /etc/systemd/system/javasimple.service
#           sudo mv /tmp/javaforking.service /etc/systemd/system/javaforking.service
#           sudo chmod 644 /etc/systemd/system/javasimple.service
#           sudo chmod 644 /etc/systemd/system/javaforking.service

#           echo "Reloading and restarting services..."
#           sudo systemctl daemon-reload
#           sudo systemctl enable --now javasimple.service
#           sudo systemctl enable --now javaforking.service

#           echo "Service status (javasimple):"
#           sudo systemctl status javasimple.service --no-pager || true

#           echo "Service status (javaforking):"
#           sudo systemctl status javaforking.service --no-pager || true

#           echo "Last 50 lines javasimple logs:" 
#           sudo journalctl -n 50 -u javasimple.service --no-pager || true
#         EOF

